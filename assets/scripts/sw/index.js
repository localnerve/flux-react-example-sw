/***
 * Copyright (c) 2015 Alex Grant (@localnerve), LocalNerve LLC
 * Copyrights licensed under the BSD License. See the accompanying LICENSE file for terms.
 *
 * Entry point for the service worker.
 * The 'precache' and 'data' modules are generated by the build.
 * @see grunt/tasks/service-worker.js
 */
/* global Request */
'use strict';

var toolbox = require('sw-toolbox');
var debug = require('./debug')('index');
var data = require('./data');
var apis = require('./apis');
var idb = require('./idb');
var handler = require('./handler');

toolbox.options.cacheName = data.cacheId + '-' + toolbox.options.cacheName;
toolbox.options.debug = data.debug;

// Setup non-project static asset precaching (cdn requests)
toolbox.precache(data.assets.map(function (asset) {
  return new Request(asset, {
    mode: 'no-cors'
  });
}));

// Setup api requests
apis.setupApiRequests();

// Setup message handling
require('./messages');

// Setup the sw-precache managed cache
require('./precache');

// If init stores exists, since this is starting, re-initialize.
// The init message may never come if this was just restarted by the system.
idb.get('init', 'stores').then(function (payload) {
  if (payload) {
    handler('init', payload, function (res) {
      if (res.error) {
        return console.error('init command failed', res.error);
      }
    });
  } else {
    debug(toolbox.options, 'init stores not found');
  }
}).catch(function (error) {
  console.error('init stores error', error);
});
