/***
 * Copyright (c) 2015 Alex Grant (@localnerve), LocalNerve LLC
 * Copyrights licensed under the BSD License. See the accompanying LICENSE file for terms.
 *
 * Entry point for the service worker.
 * The precache and data modules are generated by the build.
 */
/* global Request */
'use strict';

// For now, this only works in dev builds, sw-toolbox issue #31
var toolbox = require('sw-toolbox');
var data = require('./data');

toolbox.options.cacheName = data.cacheId + '-' + toolbox.options.cacheName;
toolbox.options.debug = data.debug;

// Setup non-project static asset precaching (cdn requests)
toolbox.precache(data.assets.map(function (asset) {
  return new Request(asset, {
    mode: 'no-cors'
  });
}));

// Handle the api gets
// Broken: sw-toolbox issue #35
data.api_gets.forEach(function (path) {
  toolbox.router.get(path+'*', function (request, values, options) {
    var req = new Request(request, {
      credentials: 'include'
    });
    return toolbox.networkFirst(req, values, options);
  }, { debug: data.debug });
});

// Setup message handling
require('./messages');

// Setup the in-project static asset precaching
require('./precache');

// TODO:
// Handle the post request?
// Use background sync to handle when available.
